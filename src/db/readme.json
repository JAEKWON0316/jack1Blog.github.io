{
    "readmes": [
        {
            "id": 1,
            "title": "링키지 (Spring, MySQL)",
            "intro": "2024.04 - 2024.06(팀 프로젝트)",
            "deploymentURL": "http://www.linkisy.kr",
            "summary": "Spring과 MySQL을 연동하여 개발한 식당 예약 웹사이트",
            "highlights": [
              "캐치테이블을 보고 영감을 받고 직접 개발",
              "백엔드와 프론트엔드를 명확히 구분하여 개발",
              "Mybatis, tiles, mapper, jsp를 활용하여 Spring mvc 구현",
              "예약이 가능한 어플 상 파일·이미지 관리가 중요한 부분을 중점으로 개발 및 GPS를 활용한 가시성 확보"
            ],
            "myRole": "메뉴/식당 DB관리 , 파일·이미지 입·출력·삭제 관리",
            "description": "식당과 메뉴 정보의 등록부터 삭제까지 모든 CURD 기능을 담당하였습니다. 식당, 메뉴, 메뉴판 각각의 db와 그에 해당하는 이미지와 파일에 대해 Mybatis를 활용한 DTO로 mapper를 만들어 CRUD기능을 처리하였습니다. 또한 일반유저페이지, 관리자페이지, 사업자페이지,테마페이지별 페이지를 Tiles로 나누어서 MYbatis와 함께 SPRING MVC기능을 구현하고 파일업로드를 위하여 Pom.xml에 commons io, commons fileupload를 설정한 후 MultipartFile의 uploadFile로 파일정보들을 나누어 DB에 저장하였습니다. 그리고 servletContext로 경로를 설정해주고 transferTo로 파일 업로드 및 파일이 폴더내로 저장되게 하였습니다. 또한 썸네일제작을 위해 imageUrl 이라는 필드를 만들어 각 이미지의 src경로 정보를 담아 다른 사용자에게 보여질 수 있도록 만들며 imnum(ImageNumber)값으로 가게id와 메뉴id를 따라가 저장될 수 있도록 설계하였습니다. 마지막으로 jackson-databind, AJAX, FormData를 활용하여 실시간 비동기 처리 기능을 개발하였습니다.",
            "background": "요즘처럼 모든 것이 빠르게 변화하고 즉각적인 결과를 요구하는 즉시성의 시대에서 캐치테이블과 같은 어플을 만들고 싶었습니다. 대부분의 사람들이 여자친구 남자친구로 인하여 식당 예약을 한 경험과 맛집을 찾아가서 오랜시간 줄 서 본 경험이 있을거라 생각이되었습니다. 그리하여 맛집이나 내 주변 식당을 찾고 싶을 떄 어떻게하면 편리하고 빠르게 찾을 수 있을까 라는 생각과 요즘 같은 시대에 어울리는 어플을 한 번 만들어보자 라는 생각에 개발을 시작하게 되었습니다.",
            "meaning": "처음으로 제대로 된 Github 협업을 통해 개발한 프로젝트입니다. 시작할 땐 AWS의 RDS로 데이터베이스를 관리하려고 하였지만 요금이 비정상적이게 많이 나와 MySQL 공유DB를 선택해서 DB설계 및 관리를 시작하였습니다. 프론트엔드에서 Figma로 와이어프레임과 전체적인 틀을 보내주면 그걸 토대로 VSCODE에 작성해서 기본적인 페이지 구성하였고 카카오API로 GPS를 설정했지만 광범위하게 쓰려면 생각보다 돈이 많이 들어 중간에 Google API로 변경하여 GPS를 제작하게 되었습니다. 이러한 점들로 인해 RDS에 관하여 공부하게되었고 API를 활용한 지도제작을 익히게 되었습니다.",
            "meaning2": "고객들에게 어떠한 방식으로 보다 빠르고 편리한 서비스를 제공할 수 있을까 생각을 하다가 각 주제별 테마를 넣어서 원하는 정보를 쉽게 가져가 예약 하실 수 있도록 하자 해서 테마별 식당 GPS를 제공하게 되었습니다. 예를들어 '비오는 날 생각나는 식당', '바다여행 필수 맛집' 처럼 사용자들은 자기가 정한 테마를 블로그처럼 홍보할 수 있고 다른 사용자들은 테마가 마음에 들면 팔로우를 해서 자기가 원하는 정보를 쉽게 가져갈 수 있도록 만들었습니다.",
            "meaning3": "그밖에도 노출여부와 키워드를 활용한 가게홍보, 날짜를 선택해서 예약할 수 있는 기능, 댓글/좋아요, 이미지/파일 업로드 등의 기능을 구현하며 일반적인 커뮤니티 서비스에서 핵심적인 기능들이 어떻게 구현되는지 경험해볼 수 있었던 프로젝트입니다.",
            "technologyStacks": [
              "Java",
              "Spring Framework",
              "MySQL",
              "Mybatis",
              "Vanilla JS",
              "Tomcat",
              "Maven"
            ],
            "setupUsage": "git clone https://github.com/JAEKWON0316/roadProject \n cd roadProject"
        },
      {
        "id": 2,
        "title": "포트폴리오 웹사이트 (React)",
        "intro": "2024.09.26 - 2024.10.06(개인 프로젝트)",
        "deploymentURL": "https://jack1.blog",
        "summary": "React를 기반으로 제작한 포트폴리오 웹사이트",
        "highlights": [
          "나만의 포트폴리오를 위한 웹사이트 개발",
          "JSON 사용으로 가독성과 재상용성에 유리함을 챙기며 제작",
          "컴포넌트를 최소화하여 성능최적화와 유지보수에 이점을 챙김",
          "React Hooks를 사용함으로 가벼운 상태 관리와 생명주기를 간소화 시킴"
        ],
        "myRole": "자기소개, 인적 사항, 기술 스택, GitHub 및 블로그 링크, 프로젝트 경험",
        "description": "처음부터 마지막까지 스스로 계획하고 혼자 학습하며 만들어낸 포트폴리오입니다.",
        "background": "29살 늦은 나이에 개발자 일에 관심을 가지고 시작하여 내일배움카드 JAVA반을 수료한 후 자격증을 따고 취업을 위해 저 자신을 잘 나타내고 알리고자 제작을 결정하게 되었습니다. 제작을 위해 어떤 도구들을 사용할까 고민하다 프론트엔드는 요즘 인기있는 React를 사용했고 데이터 관리는 JSON으로 했습니다. JSON은 후에 완전한 백엔드를 위하여 REST API를 활용하여 MySQL과 연동하고 RWD를 추가하여 재배포할 예정입니다.",
        "meaning": "처음으로 혼자 처음부터 끝까지 계획하고 제작한 프로젝트입니다. 포트폴리오인 만큼 어떤 방식으로 저 자신을 나타내야할까, UI/UX는 어떻게 디자인 해야할까, 백엔드 기능은 어떤식으로 추가해야할까 고민했습니다. 고민끝에 일단 간결하고 가독성 좋은 React와 JSON을 DB처럼 써서 만들어보자 하고 React를 익히게 되었습니다. ",
        "meaning2": "기본적인 틀을 제작한 후 JSON 타입으로 변환하는데 시간이 좀 걸렸습니다. projects 부분과 Carousel 부분 그리고 ReadMe 부분을 각각의 JSON 타입으로 변환하여 인덱스를 이용해 백엔드에서 DB를 가져오는것처럼 만들어보려 했습니다. 이 부분을 개발하면서 useState, useEffect를 활용한 React Hooks에 대해 자세히 공부하게 되었고 JSON 타입을 활용할 수 있는 여러가지 방면을 알게 되었습니다. 또한 무한 캐러셀 부분을 구현하면서 게시판 작업할 때 했던 페이징네이션과 비슷한 알고리즘이구나 생각하며 포트폴리오에 더욱 흥미를 가지고 제작하게 되었습니다. ",
        "meaning3": "그밖에도 Navigation에서 섹션별로 나누어 click 이벤트 함수 만들기, HTML Height로 스크롤 시 AUTO ACTIVE 이벤트 만들기, MouseEnter · MouseLeave같은 여러 이벤트 활용, CSS를 활용한 다양한 animation 활용, 스크롤 함수와 마우스 이벤트를 섞은 조건문을 이용한 가독성 향상 등 수많은 경험을 해보며 프로젝트 개발 및 프로그래밍 언어에 더욱 관심을 가지게 되었습니다.",
        "technologyStacks": [
          "React",
          "React Hooks",
          "JSON",
          "HTML5",
          "CSS",
          "Bootstrap",
          "GitHub Pages"
        ],
        "setupUsage": "# Install JavaScript Packages \n npm install \n\n # Run Frontend Server \n npm start"
    },
    {
      "id": 3,
      "title": "대한청년을세계로 웹사이트 (SpringBoot)",
      "intro": "2024.11.05 - 2024.12.03(개인 프로젝트)",
      "deploymentURL": "https://daecheongse.com",
      "summary": "React, SpringBoot, mysql, Firebase를 기반으로 제작한 AI 웹사이트",
      "highlights": [
        "사단법인 대한청년을세계로 홍보를 위한 웹사이트 개발",
        "클라이언츠특에서 LocalStorage와 React Query로 캐싱하여 사용자경험 향상",
        "SpringBoot Redis를 사용하여 성능최적화의 이점을 챙김",
        "React Hooks를 사용하여 유지보수를 위한 가벼운 상태 관리와 생명주기를 간소화 시킴",
        "각각 Vercel과 Heroku로 GitHub와 연결한 배포자동화 기능"
      ],
      "myRole": "DB관리, 이미지 및 파일 입·출력, 반응형 지원, CSS 지원, 프론트·백엔드 독립 배포 ",
      "description": "프론트 한 분과 같이 Git으로 협업하며 제작한 웹사이트입니다.",
      "background": "사단법인을 운영하는 친구가 법인홍보를 위한 웹사이트를 제작 해달라고 부탁하였습니다. 전에 팀프로젝트를 했을 때 Spring, JSP, Mybatis로 작업을 했으니 요번에는 React, Springboot로 작업을 하자 결정하고 프론트로는 React를 백엔드로는 SpringBoot를 선택하여 웹페이지 제작에 들어갔습니다. 프론트 한 분과는 GIT으로 협업하자고 정하였고 기본적인 DB는 Mysql 워크벤치를 그리고 파일 및 이미지는 Firebase를 사용하기로 하고 작업을 시작하였습니다. ",
      "meaning": "국비지원을 받을 때 같이 수업을 수료했던 프론트 한 분과 같이 작업을 했습니다. 무슨 스킬들을 사용할것인지 의논하고 결정한 후에 바로 외주 주신분과 연락을 하면서 DB설계 및 Header·Footer·Main 페이지 제작에 들어갔습니다. 전에 사용한 적이 있던 React여서 프론트 작업은 괜찮았지만 백엔드는 새로 도전하는 SpringBoot여서 개발하는데 어려움이 있었습니다. JPA에 대해서도 공부해야 했고 외주 맡기신 분의 의사를 반영하면서 해야했기에 여러번의 수정이 필요했습니다. 또한 업데이트 되는 부분이 많다보니 오버로딩의 중요성을 깨닫고 요청이 있을 때 마다 오버로딩의 확장성을 활용하여 문제를 풀어갔습니다.",
      "meaning2": "각각의 서브메뉴마다 Role을 추가하여 페이지별로 나눌 수 있는 기능을 만들었고 회원가입이 없는 페이지라 클라이언트 측에서 로컬스토리지에 각 게시판의 ID를 담아서 같은 PC에서 24시간안에 각 게시글을 들어가면 조회수가 증가하지 않도록 하였습니다. 그리고 작성자·내용·제목 별 검색 기능 및 페이징 기능과 버튼기능을 추가하여 백엔드 개발을 테스트 했습니다. 처음에는 로컬에 있는 이미지와 파일이 잘 나오는지 확인하기 위해 로컬 경로를 설정해줘서 이미지와 파일 입·출력 기능을 설정했고 Mysql 표준시간과 Formatter를 이용하여 날짜가 정상적으로 나오게 하였습니다. GPS는 카카오 지도 API를 활용해서 구현하여 테스트 작업을 마무리했습니다.",
      "meaning3": "테스트를 완료 한 후에 배포 작업을 진행하였습니다. 프론트는 Vercel로 백엔드는 Heroku로 각각 독립배포를 실행하였습니다. 프론트는 문제 없었지만 배포한 백엔드에서는 많은 문제가 있었습니다. 시작부터 여러가지 환경변수들을 지정해줘야 했고 Heroku는 JAR파일을 가지고 배포를 하지만 그 사실을 몰랐던 저는 프로젝트를 WAR파일로 만들었고 Heroku에서 직접 WAR파일을 인식하여 배포할 수 있게 만들었습니다. 또 시간 Format한 부분이 아이폰과는 호환이 안돼서 시간 설정도 다시 해줘야했고 이미지 입·출력을 위해 로컬에 있던 이미지를 Firebase Storage로 옮기면서 많은 설정을 해줘야했습니다. 비공개 키를 받아서 인증을 해줬어야했는데 Google 조직구성 때문에 Key를 받아내질 못해서 직접 GLI (Google CLI)를 사용해서 마스터 계정에 권한부여를 했고 조직규칙을 수정하게 만들어서 Key를 받아내게 하였습니다. 그렇게 Mysql DB에 저장되어있는 경로와 URL을 바꿔줘서 이미지 및 파일 입출력이 가능하게 만들었습니다. 마지막으로 서버 성능측에도 문제가 있었는데 트래픽 처리와 성능 최적화를 위해 무슨 방법이 있을까 하다가 Promise All로 API호출을 병렬처리를 하고 Redis를 이용한 캐싱 방법과 SSE를 이용한 클라이언트 측과의 통신을 선택하였습니다. 클라이언트 측에서도 성능 최적화를 위해 LocalStorage을 활용한 캐싱을 했고 마지막으로 Vercel.json에 src 경로를 설정해주어서 카카오 API에서 받아오는 GPS부분과 firebase에서 받아오는 파일·이미지 입출력을 마무리지었습니다.",
      "ps": "실시간 조회수 처리를 위해 SSE를 사용했지만 너무 비효율적이여서 조회수처리 api를 새로 만들었습니다. 또한 클라이언트측에서 사용자경험 향상을 위한 LocalStorage와 ReactQuery로 캐싱하여 보다 빠르게 정보를 볼 수 있게 하였습니다. ",

      "technologyStacks": [
        "SpringBoot",
        "Redis",
        "React",
        "ReactHooks",
        "Mysql",
        "Vercel",
        "Heroku",
        "Firebase"
      ],
      "setupUsage": "이 기능은 비공개라 사용하실 수 없습니다."
  },
  {
    "id": 4,
    "title": "AI(V0.dev)제작 웹사이트 (next.js)",
    "intro": "2024.11.02 - 2024.12.03(2인 프로젝트)",
    "deploymentURL": "https://daecheongse.co.kr",
    "summary": "React, next.js를 기반으로 제작한 AI 웹사이트",
    "highlights": [
      "AI Tool(V0.dev)을 활용한 웹사이트 개발",
      "V0.dev의 도움을 받아 단시간에 제작 · 배포 및 프로젝트 수정과 유지보수에 AI를 활용한 반자동화 기능",
      "React와 강력하게 연동되는 Next.js를 사용함으로 프론트개발에 필요한 생산성과 성능면에서 이점을 챙김",
      "TailWindCSS 사용으로 생산성 향샹 및 자동 반응형 디자인 지원"
    ],
    "myRole": "AI와의 통신, 프론트 배포, AI가 만든 코드를 공부·해석 및 자기것으로 만듦",
    "description": "처음으로 AI Tool을 활용하여 제작부터 배포까지 한 사이트입니다.",
    "background": "친구가 사단법인을 운영하고 있는데 AI에 대한 포럼을 개최하고 있는걸 알고 AI를 직접 활용하여 사이트까지 배포하여 초대장형식으로 남들에게 나눠주면 어떨까라는 생각으로 작업을 시작하게 되었습니다. 백엔드 기능까지는 넣을 필요가 없다고 판단하여 프론트제작에 적합한 V0.dev라는 AI Tool을 활용하였고 기본적으로 AI가 코드를 작성해주면 그것을 제것으로 만들어 VSCODE에 옮겨담아 필요한 라이브러리들을 추가하며 스스로 독학 및 수정하며 제작하였고 법인에 있는 사람들에게 도메인을 나눠주어 기본 초대장 형식에서 벗어난 사이트로 사람들을 초대하는 프로젝트를 제작하게 되었습니다.  ",
    "meaning": "처음으로 AI를 활용하여 계획하고 제작한 프로젝트입니다. 많은 사람들에게 보여지는 초대장인 만큼 어떤식으로 남들에게 보여져야 할까 고민하며 제작하였습니다. 대부분의 사람들이 모바일로 볼것이라고 판단하여 반응형 지원에 적합한 TailWindCSS와 Next.js를 사용해서 만들자 정하고 V0와 대화하며 작업을 시작하게 되었습니다.",
    "meaning2": "시작이 쉽지는 않았습니다. 제가 원하는 부분을 AI가 제대로 못알아들을 때도 있었고 잘못 해석하여 이상하게 만들어주는 경우도 있었습니다. 하지만 계속 AI Tool을 활용하다 보니 어떤식으로 대화를 해야지 이 친구가 제 말을 이해하고 스스로 적합한 판단을 하는지 알게되었습니다. 대화하는 법을 배우다보니 작업 속도는 올라갔고 이틀만에 기본적인 틀과 코드를 받아서 제것으로 만들위해 VSCODE로 옮기는 작업을 했습니다.",
    "meaning3": "VSCODE로 옮겼을 때 설치해야 하는 라이브러리들과 설정해줘야 하는 부분들이 많았습니다. AI가 만들어준 것을 제것으로 만들기 위해 TailWindCSS와 Next.js 그리고 TypeSCript에 대하여 독학하게 되었고 next.config, tailwind.config, postcss.config 등 여러가지 설정을 해준 후 AI가 틀린 부분을 수정하며 제작을 완료하고 도메인을 사서 배포까지 완료하였습니다. 작업을 하다보니 AI가 지금 이렇게까지나 할 수 있구나 더 발전한 미래에 대하여 스스로에게 물어볼 수 있는 계기가 되었고 AI Tool에 많은 관심을 가지게 되어 앞으로도 다양한 AI를 활용한 웹사이트 제작을 해 볼 예정입니다.",
    "technologyStacks": [
      "React",
      "React Hooks",
      "Next.js",
      "TailwindCSS",
      "GitHub Pages"
    ],
    "setupUsage": "# Install JavaScript Packages \n npx create-next-app@latest aiSites \n npm install tailwindcss postcss autoprefixer \n\n # Run Frontend Server \n npm run dev"
}
    ]
  }
  