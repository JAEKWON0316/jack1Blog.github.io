{
    "readmes": [
        {
            "id": 1,
            "title": "링키지 (Spring, MySQL)",
            "intro": "2024.04 - 2024.06(팀 프로젝트)",
            "deploymentURL": "http://www.ezroad.kr",
            "summary": "Spring과 MySQL을 연동하여 개발한 식당 예약 웹사이트",
            "highlights": [
              "캐치테이블을 보고 영감을 받고 직접 개발",
              "백엔드와 프론트엔드를 명확히 구분하여 개발",
              "Mysql 공용DB와 Figma 그리고 Java Spring을 활용하여 구현",
              "예약이 가능한 어플 상 파일·이미지 관리가 중요한 부분을 중점으로 개발 및 GPS를 활용한 가시성 확보"
            ],
            "myRole": "메뉴/식당 DB관리 , 파일·이미지 입·출력·삭제 관리",
            "description": "식당과 메뉴 정보의 등록부터 삭제까지 모든 CURD 기능을 담당하였습니다. 파일업로드를 위하여 Pom.xml에 commons io, commons fileupload를 설정한 후 MultipartFile의 uploadFile로 파일정보들을 나누어 DB에 저장하였습니다. 그리고 servletContext로 경로를 설정해주고 transferTo로 파일 업로드 및 파일이 폴더내로 저장되게 하였습니다. 또한 썸네일제작을 위해 imageUrl 이라는 필드를 만들어 각 이미지의 src경로 정보를 담아 다른 사용자에게 보여질 수 있도록 만들며 imnum(ImageNumber)값으로 가게id와 메뉴id를 따라가 저장될 수 있도록 설계하였습니다. 마지막으로 jackson-databind, AJAX, FormData를 활용하여 실시간 비동기 처리 기능을 개발하였습니다.",
            "background": "요즘처럼 모든 것이 빠르게 변화하고 즉각적인 결과를 요구하는 즉시성의 시대에서 캐치테이블과 같은 어플을 만들고 싶었습니다. 대부분의 사람들이 여자친구 남자친구로 인하여 식당 예약을 한 경험과 맛집을 찾아가서 오랜시간 줄 서 본 경험이 있을거라 생각이되었습니다. 그리하여 맛집이나 내 주변 식당을 찾고 싶을 떄 어떻게하면 편리하고 빠르게 찾을 수 있을까 라는 생각과 요즘 같은 시대에 어울리는 어플을 한 번 만들어보자 라는 생각에 개발을 시작하게 되었습니다.",
            "meaning": "처음으로 제대로 된 Github 협업을 통해 개발한 프로젝트입니다. 시작할 땐 AWS의 RDS로 데이터베이스를 관리하려고 하였지만 요금이 비정상적이게 많이 나와 MySQL 공유DB를 선택해서 DB설계 및 관리를 시작하였습니다. 프론트엔드에서 Figma로 와이어프레임과 전체적인 틀을 보내주면 그걸 토대로 VSCODE에 작성해서 기본적인 페이지 구성하였고 카카오API로 GPS를 설정했지만 광범위하게 쓰려면 생각보다 돈이 많이 들어 중간에 Google API로 변경하여 GPS를 제작하게 되었습니다. 이러한 점들로 인해 RDS에 관하여 공부하게되었고 API를 활용한 지도제작을 익히게 되었습니다.",
            "meaning2": "고객들에게 어떠한 방식으로 보다 빠르고 편리한 서비스를 제공할 수 있을까 생각을 하다가 각 주제별 테마를 넣어서 원하는 정보를 쉽게 가져가 예약 하실 수 있도록 하자 해서 테마별 식당 GPS를 제공하게 되었습니다. 예를들어 '비오는 날 생각나는 식당', '바다여행 필수 맛집' 처럼 사용자들은 자기가 정한 테마를 블로그처럼 홍보할 수 있고 다른 사용자들은 테마가 마음에 들면 팔로우를 해서 자기가 원하는 정보를 쉽게 가져갈 수 있도록 만들었습니다.",
            "meaning3": "그밖에도 노출여부와 키워드를 활용한 가게홍보, 날짜를 선택해서 예약할 수 있는 기능, 댓글/좋아요, 이미지/파일 업로드 등의 기능을 구현하며 일반적인 커뮤니티 서비스에서 핵심적인 기능들이 어떻게 구현되는지 경험해볼 수 있었던 프로젝트입니다.",
            "technologyStacks": [
              "Java",
              "Spring Framework",
              "MySQL",
              "Figma",
              "Vanilla JS",
              "Tomcat",
              "Maven"
            ],
            "setupUsage": "git clone https://github.com/JAEKWON0316/roadProject \n cd roadProject"
        },
      {
        "id": 2,
        "title": "포트폴리오 웹사이트 (React)",
        "intro": "2024.09.26 - 2024.10.06(개인 프로젝트)",
        "deploymentURL": "https://jack1.blog",
        "summary": "React를 기반으로 제작한 포트폴리오 웹사이트",
        "highlights": [
          "나만의 포트폴리오를 위한 웹사이트 개발",
          "JSON 사용으로 가독성과 재상용성에 유리함을 챙기며 제작",
          "컴포넌트를 최소화하여 성능최적화와 유지보수에 이점을 챙김",
          "React Hooks를 사용함으로 가벼운 상태 관리와 생명주기를 간소화 시킴"
        ],
        "myRole": "자기소개, 인적 사항, 기술 스택, GitHub 및 블로그 링크, 프로젝트 경험",
        "description": "처음부터 마지막까지 스스로 계획하고 혼자 학습하며 만들어낸 포트폴리오입니다.",
        "background": "29살 늦은 나이에 개발자 일에 관심을 가지고 시작하여 내일배움카드 JAVA반을 수료한 후 자격증을 따고 취업을 위해 저 자신을 잘 나타내고 알리고자 제작을 결정하게 되었습니다. 제작을 위해 어떤 도구들을 사용할까 고민하다 프론트엔드는 요즘 인기있는 React를 사용했고 데이터 관리는 JSON으로 했습니다. JSON은 후에 완전한 백엔드를 위하여 REST API를 활용하여 MySQL과 연동하고 RWD를 추가하여 재배포할 예정입니다.",
        "meaning": "처음으로 혼자 처음부터 끝까지 계획하고 제작한 프로젝트입니다. 포트폴리오인 만큼 어떤 방식으로 저 자신을 나타내야할까, UI/UX는 어떻게 디자인 해야할까, 백엔드 기능은 어떤식으로 추가해야할까 고민했습니다. 고민끝에 일단 간결하고 가독성 좋은 React와 JSON을 DB처럼 써서 만들어보자 하고 React를 익히게 되었습니다. ",
        "meaning2": "기본적인 틀을 제작한 후 JSON 타입으로 변환하는데 시간이 좀 걸렸습니다. projects 부분과 Carousel 부분 그리고 ReadMe 부분을 각각의 JSON 타입으로 변환하여 인덱스를 이용해 백엔드에서 DB를 가져오는것처럼 만들어보려 했습니다. 이 부분을 개발하면서 useState, useEffect를 활용한 React Hooks에 대해 자세히 공부하게 되었고 JSON 타입을 활용할 수 있는 여러가지 방면을 알게 되었습니다. 또한 무한 캐러셀 부분을 구현하면서 게시판 작업할 때 했던 페이징네이션과 비슷한 알고리즘이구나 생각하며 포트폴리오에 더욱 흥미를 가지고 제작하게 되었습니다. ",
        "meaning3": "그밖에도 Navigation에서 섹션별로 나누어 click 이벤트 함수 만들기, HTML Height로 스크롤 시 AUTO ACTIVE 이벤트 만들기, MouseEnter · MouseLeave같은 여러 이벤트 활용, CSS를 활용한 다양한 animation 활용, 스크롤 함수와 마우스 이벤트를 섞은 조건문을 이용한 가독성 향상 등 수많은 경험을 해보며 프로젝트 개발 및 프로그래밍 언어에 더욱 관심을 가지게 되었습니다.",
        "technologyStacks": [
          "React",
          "React Hooks",
          "JSON",
          "HTML5",
          "CSS",
          "Bootstrap",
          "GitHub Pages"
        ],
        "setupUsage": "# Install JavaScript Packages \n npm install \n\n # Run Frontend Server \n npm start"
    },
    {
      "id": 3,
      "title": "AI(V0.dev)제작 웹사이트 (next.js)",
      "intro": "2024.11.02 - 2024.11.03(개인 프로젝트)",
      "deploymentURL": "https://daecheongse.co.kr",
      "summary": "React, next.js를 기반으로 제작한 AI 웹사이트",
      "highlights": [
        "나만의 포트폴리오를 위한 웹사이트 개발",
        "JSON 사용으로 가독성과 재상용성에 유리함을 챙기며 제작",
        "컴포넌트를 최소화하여 성능최적화와 유지보수에 이점을 챙김",
        "React Hooks를 사용함으로 가벼운 상태 관리와 생명주기를 간소화 시킴"
      ],
      "myRole": "자기소개, 인적 사항, 기술 스택, GitHub 및 블로그 링크, 프로젝트 경험",
      "description": "처음부터 마지막까지 스스로 계획하고 혼자 학습하며 만들어낸 포트폴리오입니다.",
      "background": "29살 늦은 나이에 개발자 일에 관심을 가지고 시작하여 내일배움카드 JAVA반을 수료한 후 자격증을 따고 취업을 위해 저 자신을 잘 나타내고 알리고자 제작을 결정하게 되었습니다. 제작을 위해 어떤 도구들을 사용할까 고민하다 프론트엔드는 요즘 인기있는 React를 사용했고 데이터 관리는 JSON으로 했습니다. JSON은 후에 완전한 백엔드를 위하여 REST API를 활용하여 MySQL과 연동하고 RWD를 추가하여 재배포할 예정입니다.",
      "meaning": "처음으로 혼자 처음부터 끝까지 계획하고 제작한 프로젝트입니다. 포트폴리오인 만큼 어떤 방식으로 저 자신을 나타내야할까, UI/UX는 어떻게 디자인 해야할까, 백엔드 기능은 어떤식으로 추가해야할까 고민했습니다. 고민끝에 일단 간결하고 가독성 좋은 React와 JSON을 DB처럼 써서 만들어보자 하고 React를 익히게 되었습니다. ",
      "meaning2": "기본적인 틀을 제작한 후 JSON 타입으로 변환하는데 시간이 좀 걸렸습니다. projects 부분과 Carousel 부분 그리고 ReadMe 부분을 각각의 JSON 타입으로 변환하여 인덱스를 이용해 백엔드에서 DB를 가져오는것처럼 만들어보려 했습니다. 이 부분을 개발하면서 useState, useEffect를 활용한 React Hooks에 대해 자세히 공부하게 되었고 JSON 타입을 활용할 수 있는 여러가지 방면을 알게 되었습니다. 또한 무한 캐러셀 부분을 구현하면서 게시판 작업할 때 했던 페이징네이션과 비슷한 알고리즘이구나 생각하며 포트폴리오에 더욱 흥미를 가지고 제작하게 되었습니다. ",
      "meaning3": "그밖에도 Navigation에서 섹션별로 나누어 click 이벤트 함수 만들기, HTML Height로 스크롤 시 AUTO ACTIVE 이벤트 만들기, MouseEnter · MouseLeave같은 여러 이벤트 활용, CSS를 활용한 다양한 animation 활용, 스크롤 함수와 마우스 이벤트를 섞은 조건문을 이용한 가독성 향상 등 수많은 경험을 해보며 프로젝트 개발 및 프로그래밍 언어에 더욱 관심을 가지게 되었습니다.",
      "technologyStacks": [
        "React",
        "React Hooks",
        "Next.js",
        "TailwindCSS",
        "GitHub Pages"
      ],
      "setupUsage": "# Install JavaScript Packages \n npm install \n\n # Run Frontend Server \n npm start"
  }
    ]
  }
  